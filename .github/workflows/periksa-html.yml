name: üìã Validasi SEO & Struktur HTML Lengkap

on:
  push:
    branches:
      - main
    paths:
      - '**.html'
      - '_headers'
      - '_redirects'
      - '*.webmanifest'
  workflow_dispatch:

jobs:
  validasi:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout kode
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Buat folder mini/
        run: mkdir -p mini

      - name: Validasi HTML & SEO (hanya yang gagal)
        run: |
          TANGGAL=$(date +%Y%m%d)
          TXT="mini/laporan-validasi-$TANGGAL.txt"
          JSON="mini/laporan-validasi-$TANGGAL.json"
          echo "üìã Laporan Validasi HTML & SEO (Hanya yang Gagal)" > $TXT
          echo "[" > $JSON

          FIRST=1
          for file in $(find . -name "*.html"); do
            GAGAL=0
            TEMP=""
            JSON_ENTRY="{\"file\":\"$file\",\"issues\":["

            # Metadata SEO
            check() {
              if ! grep -q "$1" "$file"; then
                TEMP+="‚ùå $2 MISSING\n"
                JSON_ENTRY="$JSON_ENTRY\"$2 missing\","
                GAGAL=1
              fi
            }

            check '<meta name="description"' "description"
            check '<meta property="og:title"' "og:title"
            check '<meta property="og:image"' "og:image"
            check '<meta property="og:description"' "og:description"
            check '<meta name="twitter:title"' "twitter:title"
            check '<meta name="twitter:image"' "twitter:image"
            check '<meta name="twitter:description"' "twitter:description"
            check '<link rel="canonical"' "canonical"

            # Struktur HTML
            check '<html lang=' "html lang"
            check '<meta charset=' "meta charset"
            check '<title>' "title"
            check '<head>' "head"
            check '<body>' "body"
            check '<main>' "main"
            check '<footer>' "footer"

            # Heading
            H1_COUNT=$(grep -o '<h1>' "$file" | wc -l)
            if [ "$H1_COUNT" -eq 0 ]; then
              TEMP+="‚ùå <h1> tidak ditemukan\n"
              JSON_ENTRY="$JSON_ENTRY\"h1 missing\","
              GAGAL=1
            elif [ "$H1_COUNT" -gt 1 ]; then
              TEMP+="‚ö†Ô∏è Duplikat <h1> ditemukan ($H1_COUNT)\n"
              JSON_ENTRY="$JSON_ENTRY\"multiple h1 ($H1_COUNT)\","
              GAGAL=1
            fi

            HEADINGS=$(grep -o '<h[1-6]>' "$file" | sed 's/<h\([1-6]\)>/\1/' | paste -sd " " -)
            if echo "$HEADINGS" | grep -qE '(^| )1( |$).*[^2]( |$)'; then
              TEMP+="‚ö†Ô∏è Urutan heading mungkin melompat: $HEADINGS\n"
              JSON_ENTRY="$JSON_ENTRY\"heading jump: $HEADINGS\","
              GAGAL=1
            fi

            # Jika gagal, tulis ke laporan
            if [ "$GAGAL" -eq 1 ]; then
              echo "‚û°Ô∏è File: $file" >> $TXT
              echo -e "$TEMP" >> $TXT
              echo "----------------------------------------" >> $TXT

              JSON_ENTRY="${JSON_ENTRY%?}]}" # tutup array dan object
              if [ "$FIRST" -eq 1 ]; then
                echo "$JSON_ENTRY" >> $JSON
                FIRST=0
              else
                echo ",$JSON_ENTRY" >> $JSON
              fi
            fi
          done

          echo "]" >> $JSON

      - name: Linting HTML
        run: |
          TANGGAL=$(date +%Y%m%d)
          TXT="mini/laporan-validasi-$TANGGAL.txt"
          echo "üßº Linting HTML dengan HTMLHint..." >> $TXT
          htmlhint "**/*.html" >> $TXT || echo "‚ö†Ô∏è Ada peringatan dari HTMLHint." >> $TXT

      - name: Commit dan push laporan ke repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add mini/
          git commit -m "üìù Update laporan validasi JSON $(date +'%Y-%m-%d')" || echo "Tidak ada perubahan untuk commit."
          git push origin HEAD
